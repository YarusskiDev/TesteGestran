// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteGestranApi.ContextEntity;

#nullable disable

namespace TesteGestranApi.Migrations
{
    [DbContext(typeof(ContextEntityFrame))]
    [Migration("20230127093602_first")]
    partial class first
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteGestranApi.Models.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(40");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasColumnType("varchar(40");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(40");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("varchar(40");

                    b.HasKey("Id");

                    b.ToTable("Adress", (string)null);
                });

            modelBuilder.Entity("TesteGestranApi.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("Id_Adress")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Adress");

                    b.ToTable("Providers", (string)null);
                });

            modelBuilder.Entity("TesteGestranApi.Models.Provider", b =>
                {
                    b.HasOne("TesteGestranApi.Models.Adress", "Adress")
                        .WithMany("Provider")
                        .HasForeignKey("Id_Adress")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adress");
                });

            modelBuilder.Entity("TesteGestranApi.Models.Adress", b =>
                {
                    b.Navigation("Provider");
                });
#pragma warning restore 612, 618
        }
    }
}
